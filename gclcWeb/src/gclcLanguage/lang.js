// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
const spec_Identifier = {__proto__:null,point:10, line:12, circle:14, number:16, angle:18, angle_o:20, set_equal:22, expression:24, array:26, while:28, if_then_else:30, random:32, intersec:34, intersection:36, intersec2:38, intersection2:40, drawpoint:42, drawsegment:44, drawdashsegment:46, drawline:48, drawdashline:50, drawvector:52, drawcircle:54, drawdashcircle:56, drawarc:58, drawdasharc:60, drawarc_p:62, drawdasharc_p:64, drawellipse:66, drawdashellipse:68, drawellipsearc:70, drawdashellipsearc:72, drawellipsearc1:74, drawdashellipsearc1:76, drawellipsearc2:78, drawdashellipsearc2:80, drawpolygon:82, drawarrow:84, drawbezier3:86, drawbezier4:88, drawdashbezier3:90, drawdashbezier4:92, layer:94, hide_layer:96, hide_layers_from:98, hide_layers_to:100, filltriangle:102, fillrectangle:104, fillcircle:106, fillellipse:108, fillarc:110, fillarc0:112, fillellipsearc:114, fillellipsearc0:116, midpoint:118, perp:120, perpendicular:122, parallel:124, getcenter:126, online:128, onsegment:130, oncircle:132, bis:134, bisector:136, med:138, mediatrice:140, distance:142, sim:144, symmetrical:146, translate:148, rotate:150, rotateonellipse:152, turtle:154, towards:156, cmark:158, cmark_lt:160, cmark_l:162, cmark_lb:164, cmark_t:166, cmark_b:168, cmark_rt:170, cmark_r:172, cmark_rb:174, mark:176, mark_lt:178, mark_l:180, mark_lb:182, mark_t:184, mark_b:186, mark_rt:188, mark_r:190, mark_rb:192, printat:194, printat_lt:196, printat_l:198, printat_lb:200, printat_t:202, printat_b:204, printat_rt:206, printat_r:208, printat_rb:210, printvalueat:212, printvalueat_lt:214, printvalueat_l:216, printvalueat_lb:218, printvalueat_t:220, printvalueat_b:222, printvalueat_rt:224, printvalueat_r:226, printvalueat_rb:228, getx:230, gety:232, foot:234, procedure:236, call:238, include:240, drawtree:242, drawgraph_a:244, drawgraph_b:246, ang_picture:248, ang_origin:250, ang_unit:252, ang_scale:254, ang_point:256, ang_line:258, ang_conic:260, ang_conicprecision:262, ang_intersec2:264, ang_intersection2:266, ang_drawline:268, ang_drawline_p:270, ang_drawsystem:272, ang_drawsystem_p:274, ang_drawsystem0:276, ang_drawsystem1:278, ang_drawsystem_a:280, ang_drawsystem0_a:282, ang_drawsystem1_a:284, ang_drawconic:286, ang_drawdashconic:288, ang_draw_parametric_curve:290, ang_tangent:292, ang_plot_data:294, ang_getx:296, ang_gety:298, ang3d_picture:300, ang3d_origin:302, ang3d_unit:304, ang3d_scale:306, ang3d_point:308, ang3d_drawline_p:310, ang3d_axes_drawing_range:312, ang3d_drawsystem_p:314, ang3d_draw_parametric_surface:316, ang3d_draw_parametric_curve:318, ang3d_getx:320, ang3d_gety:322, ang3d_getz:324, dim:326, color:328, background:330, area:332, circleprecision:334, bezierprecision:336, linethickness:338, arrowstyle:340, dash:342, dashstyle:344, dmc:346, mcr:348, mcp:350, normal:352, double:354, fontsize:356, export_to_latex:358, export_to_simple_latex:360, export_to_pstricks:362, export_to_tikz:364, export_to_eps:366, export_to_svg:368, animation_frames:370, trace:372, prove:374, prooflevel:376, prooflimit:378, prover_timeout:380, theorem_name:382}
export const parser = LRParser.deserialize({
  version: 14,
  states: "%jQVQPOOO-eQPO'#C_OOQO'#Gq'#GqOOQO'#Gk'#GkQVQPOOOOQO'#Gr'#GrO:SQPO'#GeOOQO'#Gl'#GlO:dQPO,58yOOQO-E:i-E:iOGRQPO,5=POGYQPO'#GgOHSQPO,5=QOOQO'#Gu'#GuOGYQPO'#GuOOQO-E:j-E:jOOQO1G2k1G2kOHjQPO,5=ROGYQPO,5=SOITQPO'#GmOGYQPO,5=SOGYQPO,5=TOGYQPO,5=UOGYQPO'#GmOIkQPO1G2lOOQO1G2l1G2lOJPQPO,5=aOJZQPO1G2nOKXQPO1G2nOOQO1G2o1G2oOK`QPO1G2pOLaQPO,5=XOOQO-E:k-E:kOOQO7+(W7+(WOOQO1G2{1G2{",
  stateData: "Lw~O%dOS~OQQOTTOUTOVTOWTOXTOYTOZTO[TO]TO^TO_TO`TOaTObTOcTOdTOeTOfTOgTOhTOiTOjTOkTOlTOmTOnTOoTOpTOqTOrTOsTOtTOuTOvTOwTOxTOyTOzTO{TO|TO}TO!OTO!PTO!QTO!RTO!STO!TTO!UTO!VTO!WTO!XTO!YTO!ZTO![TO!]TO!^TO!_TO!`TO!aTO!bTO!cTO!dTO!eTO!fTO!gTO!hTO!iTO!jTO!kTO!lTO!mTO!nTO!oTO!pTO!qTO!rTO!sTO!tTO!uTO!vTO!wTO!xTO!yTO!zTO!{TO!|TO!}TO#OTO#PTO#QTO#RTO#STO#TTO#UTO#VTO#WTO#XTO#YTO#ZTO#[TO#]TO#^TO#_TO#`TO#aTO#bTO#cTO#dTO#eTO#fTO#gTO#hTO#iTO#jTO#kTO#lTO#mTO#nTO#oTO#pTO#qTO#rTO#sTO#tTO#uTO#vTO#wTO#xTO#yTO#zTO#{TO#|TO#}TO$OTO$PTO$QTO$RTO$STO$TTO$UTO$VTO$WTO$XTO$YTO$ZTO$[TO$]TO$^TO$_TO$`TO$aTO$bTO$cTO$dTO$eTO$fTO$gTO$hTO$iTO$jTO$kTO$lTO$mTO$nTO$oTO$pTO$qTO$rTO$sTO$tTO$uTO$vTO$wTO$xTO$yTO$zTO${TO$|TO$}TO%OTO%PTO%QTO%RTO%STO%TTO%UTO%VTO~OSVO%WVO%hUOQRXTRXURXVRXWRXXRXYRXZRX[RX]RX^RX_RX`RXaRXbRXcRXdRXeRXfRXgRXhRXiRXjRXkRXlRXmRXnRXoRXpRXqRXrRXsRXtRXuRXvRXwRXxRXyRXzRX{RX|RX}RX!ORX!PRX!QRX!RRX!SRX!TRX!URX!VRX!WRX!XRX!YRX!ZRX![RX!]RX!^RX!_RX!`RX!aRX!bRX!cRX!dRX!eRX!fRX!gRX!hRX!iRX!jRX!kRX!lRX!mRX!nRX!oRX!pRX!qRX!rRX!sRX!tRX!uRX!vRX!wRX!xRX!yRX!zRX!{RX!|RX!}RX#ORX#PRX#QRX#RRX#SRX#TRX#URX#VRX#WRX#XRX#YRX#ZRX#[RX#]RX#^RX#_RX#`RX#aRX#bRX#cRX#dRX#eRX#fRX#gRX#hRX#iRX#jRX#kRX#lRX#mRX#nRX#oRX#pRX#qRX#rRX#sRX#tRX#uRX#vRX#wRX#xRX#yRX#zRX#{RX#|RX#}RX$ORX$PRX$QRX$RRX$SRX$TRX$URX$VRX$WRX$XRX$YRX$ZRX$[RX$]RX$^RX$_RX$`RX$aRX$bRX$cRX$dRX$eRX$fRX$gRX$hRX$iRX$jRX$kRX$lRX$mRX$nRX$oRX$pRX$qRX$rRX$sRX$tRX$uRX$vRX$wRX$xRX$yRX$zRX${RX$|RX$}RX%ORX%PRX%QRX%RRX%SRX%TRX%URX%VRX%bRX%gRX~OS]O%W]O%jZO%k^O~PVOSVO%WVO%hUOQRaTRaURaVRaWRaXRaYRaZRa[Ra]Ra^Ra_Ra`RaaRabRacRadRaeRafRagRahRaiRajRakRalRamRanRaoRapRaqRarRasRatRauRavRawRaxRayRazRa{Ra|Ra}Ra!ORa!PRa!QRa!RRa!SRa!TRa!URa!VRa!WRa!XRa!YRa!ZRa![Ra!]Ra!^Ra!_Ra!`Ra!aRa!bRa!cRa!dRa!eRa!fRa!gRa!hRa!iRa!jRa!kRa!lRa!mRa!nRa!oRa!pRa!qRa!rRa!sRa!tRa!uRa!vRa!wRa!xRa!yRa!zRa!{Ra!|Ra!}Ra#ORa#PRa#QRa#RRa#SRa#TRa#URa#VRa#WRa#XRa#YRa#ZRa#[Ra#]Ra#^Ra#_Ra#`Ra#aRa#bRa#cRa#dRa#eRa#fRa#gRa#hRa#iRa#jRa#kRa#lRa#mRa#nRa#oRa#pRa#qRa#rRa#sRa#tRa#uRa#vRa#wRa#xRa#yRa#zRa#{Ra#|Ra#}Ra$ORa$PRa$QRa$RRa$SRa$TRa$URa$VRa$WRa$XRa$YRa$ZRa$[Ra$]Ra$^Ra$_Ra$`Ra$aRa$bRa$cRa$dRa$eRa$fRa$gRa$hRa$iRa$jRa$kRa$lRa$mRa$nRa$oRa$pRa$qRa$rRa$sRa$tRa$uRa$vRa$wRa$xRa$yRa$zRa${Ra$|Ra$}Ra%ORa%PRa%QRa%RRa%SRa%TRa%URa%VRa%bRa%gRa~O%g`O~PVOS]O%W]O%jZO%k^O~O%mdO%neO%oeO%pfO%qfO%rfO%sfO%tfO~OS]O%W]O%giO%jbO%k^O%ugO~PGhO%jdOS%Za%W%Za%g%Za%k%Za%u%Za%l%Za~PGhO%jdOS%aX%W%aX%g%aX%k%aX%u%aX~PGhOS]O%W]O%gqO%jZO%k^O%ugO~O%jdO%lrO~PGhO%neO%oeOS%[i%W%[i%g%[i%j%[i%k%[i%m%[i%p%[i%q%[i%r%[i%s%[i%t%[i%u%[i~O%l%[i~PJZO%jdO%mdO%neO%oeOS%^i%W%^i%g%^i%k%^i%p%^i%q%^i%r%^i%s%^i%t%^i%u%^i%l%^i~O%jdOS%aa%W%aa%g%aa%k%aa%u%aa~PGhO",
  goto: "'c%jPPP%kPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP%q%q%u%u%u%u&R&]&cPPP&i&oPP&uXQOSUYTVPWe]UZ[^bdefghQSOSXSYRYUQWPR_WQh[RphXROSUYXPOSUYQ[UQaZSc[hQj^QkbQldQmeQnfRog",
  nodeNames: "âš  Program LineComment Statement Identifier A B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B C C C C C C C C C C C C C C C C C C C C C C C C C C D D D D D D D D D D D D D E E E E E E E E E E E E E E E E E E E E E E F F G G G G G Number StatementBlock ExpressionList Negative Sum Product Comparation",
  maxTerm: 221,
  skippedNodes: [0],
  repeatNodeCount: 3,
  tokenData: "&y~RcXY!^]^!^pq!^uv!lxy#ayz#fz{#k{|#p}!O#u!P!Q#z!Q![$P!]!^$j!^!_$o!_!`$|!`!a%X!c!}%f#T#o%f#o#p&o#q#r&t~!cR%d~XY!^]^!^pq!^~!oVOY!lYZ#UZ;'S!l;'S;=`#Z<%l~!l~O!l~~#U~#ZOQ~~#^P;=`<%l!l~#fO%k~~#kO%l~~#pO%n~~#uO%m~~#zO%j~~$PO%o~~$UQ%W~!O!P$[!Q![$P~$_P!Q![$b~$gP%W~!Q![$b~$oO%u~~$tP%q~!_!`$w~$|O%s~~%PP!_!`%S~%XO%p~~%^P%r~!_!`%a~%fO%t~~%kUS~wx%f!Q![%f!c!}%f#R#S%f#T#o%f#o#p%}~&QUwx%}!Q![%}!c!}%}#R#S%}#T#o%}#q#r&d~&gPpq&j~&oOS~~&tO%h~~&yO%g~",
  tokenizers: [0],
  topRules: {"Program":[0,1]},
  specialized: [{term: 4, get: (value) => spec_Identifier[value] || -1}],
  tokenPrec: 0
})
